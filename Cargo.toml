[package]
name = "benwis_leptos"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
anyhow = "1.0.71"
console_log = "1.0.0"
rand = { version = "0.8.5", features = ["min_const_gen"], optional = true }
rand_core = { version = "0.6.4", features = ["std"], optional = true }
console_error_panic_hook = "0.1.7"
futures = "0.3.28"
cfg-if = "1.0.0"
# leptos = { git="https://github.com/leptos-rs/leptos", features = [
# 	"serde", "tracing", "nightly"
# ] }
# leptos_meta = { git="https://github.com/leptos-rs/leptos", features=["nightly"] }
# leptos_axum = { git="https://github.com/leptos-rs/leptos", optional = true }
# leptos_router = {  git="https://github.com/leptos-rs/leptos", features = ["nightly"] }

leptos = { git="https://github.com/benwis/leptos", branch="fix_render_route", features = [
	"serde", "tracing", "nightly",
] }
leptos_meta = { git="https://github.com/benwis/leptos", branch="fix_render_route", features=["nightly"] }
leptos_axum = { git="https://github.com/benwis/leptos", branch="fix_render_route", optional = true }
leptos_router = {  git="https://github.com/benwis/leptos", branch="fix_render_route", features = ["nightly"] }
#leptos = { path="../leptos/leptos", default-features = false, features = [
#	"serde", "tracing", "nightly"
#] }
#leptos_meta = { path="../leptos/meta", features=["nightly"] }
#leptos_axum = { path="../leptos/integrations/axum", optional = true }
#leptos_router = {  path="../leptos/router", features=["nightly"] }
log = "0.4.19"
simple_logger = "4.2.0"
serde = { version = "1.0.171", features = ["derive"] }
axum = { version = "0.6.18", optional = true }
tower = { version = "0.4.13", optional = true }
tower-http = { version = "0.4.1", features = ["compression-gzip", "fs", "trace"], optional = true }
tokio = { version = "1.29.1", features = ["full"], optional = true }
http = "0.2.9"
sqlx = { version = "0.7.0", features = [
	"runtime-tokio-rustls",
	"sqlite",
], optional = true }
thiserror = "1.0.43"
wasm-bindgen = "0.2.87"
axum_session_auth = { version = "0.5.0", features = [
	"sqlite-rustls",
], optional = true }
axum_session = { version = "0.5.0", features = [
	"sqlite-rustls",
], optional = true }
argon2 = { version = "0.5.0", optional = true }
async-trait = { version = "0.1.71", optional = true }
miette = "5.9.0"
axum-extra = { version = "0.7.4", features = ["cookie"] }
web-sys = { version = "0.3.64", features = ["HtmlDocument"] }
femark = { git="https://github.com/benwis/femark", branch="pure_rust", optional = true }
slug = "0.1.4"
chrono = {version="0.4.26", features=["serde"]}
opentelemetry = { version = "0.19.0", features = ["rt-tokio"], optional = true }
opentelemetry-otlp = { version = "0.12.0", features = ["reqwest-client", "http-proto"], optional = true }
tracing-opentelemetry = { version = "0.19.0", optional = true }
tonic = { version = "0.8.0", optional = true }
tracing = "0.1.37"
tracing-futures = { version = "0.2.5", optional = true }
tracing-subscriber = { version = "0.3.17", features = ["registry", "env-filter"], optional = true }
tracing-bunyan-formatter = { version = "0.3.7", optional = true }
tracing-log = { version = "0.1.3", optional = true }
dotenvy = { version = "0.15.7", optional = true }
hyper-tls = { version = "0.5.0", optional = true }
tokio-native-tls = { version = "0.3.1", optional = true }
native-tls = { version = "0.2.11", features = ["alpn"], optional = true }
hyper = { version = "0.14.27", optional = true }
tracing-logfmt = { version = "0.3.2", optional = true }
reqwest = {version="0.11.18", default-features=false, features = ["rustls-tls"], optional = true }
octocrab = {version="0.30.1", optional=true}
indexmap = { version = "2.0.0", features = ["serde"] }
toml = "0.8.0"
parking_lot = { version = "0.12.1", features = ["serde"] }
[target.'cfg(not(target_env = "msvc"))'.dependencies]
jemallocator = {version="0.5", optional=true}

[features]
default = ["csr"]
csr = ["leptos/csr", "leptos_meta/csr", "leptos_router/csr"]
hydrate = ["leptos/hydrate", "leptos_meta/hydrate", "leptos_router/hydrate"]
ssr = ["dep:axum","dep:jemallocator", "dep:octocrab", "dep:hyper", "dep:tower","dep:tracing-logfmt", "dep:hyper-tls", "dep:reqwest","dep:tokio-native-tls", "dep:native-tls", "dep:dotenvy", "dep:tracing-futures", "dep:tracing-subscriber", "dep:tracing-bunyan-formatter", "dep:tracing-log", "dep:opentelemetry", "dep:opentelemetry-otlp", "dep:tracing-opentelemetry", "dep:tonic", "dep:tokio", "dep:tower-http", "dep:axum_session_auth", "dep:axum_session", "dep:async-trait", "dep:sqlx", "dep:argon2", "dep:femark", "dep:rand", "dep:rand_core", "leptos/ssr", "leptos_meta/ssr", "leptos_router/ssr", "dep:leptos_axum" ]

[package.metadata.cargo-all-features]
denylist = ["axum", "tower", "tower-http", "reqwest", "tokio", "sqlx", "leptos_axum", "femark", "chrono", "argon2","rand", "rand_core", "octocrab"]
skip_feature_sets = [["csr", "ssr"], ["csr", "hydrate"], ["ssr", "hydrate"]]

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "benwis_leptos"
# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"
# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"
# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
# style-file = "./styles/output.css"
# [Optional] Files in the asset-dir will be copied to the site-root directory
assets-dir = "public"
# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"
# The port to use for automatic reload monitoring
reload-port = 3001
# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
end2end-cmd = "npx playwright test"
#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"
# Set by cargo-leptos watch when building with tha tool. Controls whether autoreload JS will be included in the head
watch = false
# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"
# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false
# The tailwind input file.
#
# Optional, Activates the tailwind build
tailwind-input-file = "styles/input.css"

# The profile to use for the bin target when compiling for release
#
# Optional. Defaults to "release".
bin-profile-release = "release"

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "release-wasm-size"


[profile.release]
lto = true
opt-level = 3
panic = "unwind"

[profile.release-wasm-size]
inherits = "release"
lto = true
# panic = "abort"
opt-level = 'z'
strip = true
codegen-units = 1
